package com.ityu;

import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.0.
 */
@SuppressWarnings("rawtypes")
public class KyberConverter extends Contract {
    public static final String BINARY = "608060405260028054600160a060020a031916739b591bf99ae5818aa19fe171099d048039d3eced17905534801561003657600080fd5b5060405160408061123383398101604052805160209091015160008054600160a060020a03938416600160a060020a031991821617909155600180549390921692169190911790556111a68061008d6000396000f3006080604052600436106100535763ffffffff60e060020a60003504166375892cf18114610058578063809a9e5514610097578063a2d10ba5146100da578063c08a35fc1461010b578063c162ba2f14610120575b600080fd5b34801561006457600080fd5b50610085600160a060020a0360043581169060243516604435606435610135565b60408051918252519081900360200190f35b3480156100a357600080fd5b506100c1600160a060020a0360043581169060243516604435610704565b6040805192835260208301919091528051918290030190f35b3480156100e657600080fd5b506100ef610887565b60408051600160a060020a039092168252519081900360200190f35b34801561011757600080fd5b506100ef610896565b34801561012c57600080fd5b506100ef6108a5565b60008060008087600160a060020a03166370a08231306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561019657600080fd5b505af11580156101aa573d6000803e3d6000fd5b505050506040513d60208110156101c057600080fd5b505192506101df600160a060020a03891633308963ffffffff6108b416565b151561025b576040805160e560020a62461bcd02815260206004820152602d60248201527f436f756c64206e6f74207472616e73666572205f737263546f6b656e20746f2060448201527f7468697320636f6e747261637400000000000000000000000000000000000000606482015290519081900360840190fd5b60005461027b90600160a060020a038a811691168863ffffffff610c7016565b151561031d576040805160e560020a62461bcd02815260206004820152604360248201527f436f756c64206e6f7420617070726f7665206b7962657220746f20757365205f60448201527f737263546f6b656e206f6e20626568616c66206f66207468697320636f6e747260648201527f6163740000000000000000000000000000000000000000000000000000000000608482015290519081900360a40190fd5b60008054600154604080517fcb3c28c7000000000000000000000000000000000000000000000000000000008152600160a060020a038d81166004830152602482018c90528c81166044830152306064830152608482018b905260a4820186905292831660c48201529051919092169263cb3c28c79260e480820193602093909283900390910190829087803b1580156103b657600080fd5b505af11580156103ca573d6000803e3d6000fd5b505050506040513d60208110156103e057600080fd5b505160005490925061040490600160a060020a038a8116911663ffffffff610e6016565b15156104a6576040805160e560020a62461bcd02815260206004820152604d60248201527f436f756c64206e6f7420636c65617220617070726f76616c206f66206b79626560448201527f7220746f20757365205f737263546f6b656e206f6e20626568616c66206f662060648201527f7468697320636f6e747261637400000000000000000000000000000000000000608482015290519081900360a40190fd5b818514610523576040805160e560020a62461bcd02815260206004820152602960248201527f416d6f756e7420626f75676874206973206e6f7420657175616c20746f20646560448201527f737420616d6f756e740000000000000000000000000000000000000000000000606482015290519081900360840190fd5b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516105c2918591600160a060020a038c16916370a082319160248083019260209291908290030181600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050506040513d60208110156105b457600080fd5b50519063ffffffff610e9716565b90506000811115610663576105e7600160a060020a038916338363ffffffff610eae16565b1515610663576040805160e560020a62461bcd02815260206004820152602360248201527f436f756c64206e6f74207472616e73666572206368616e676520746f2073656e60448201527f6465720000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61067d600160a060020a038816338463ffffffff610eae16565b15156106f9576040805160e560020a62461bcd02815260206004820152603560248201527f436f756c64206e6f74207472616e7366657220616d6f756e74206f66205f646560448201527f7374546f6b656e20746f206d73672e73656e6465720000000000000000000000606482015290519081900360840190fd5b979650505050505050565b60008054604080517f809a9e55000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015286811660248301526044820186905282518594919091169263809a9e55926064808201939182900301818787803b15801561077957600080fd5b505af115801561078d573d6000803e3d6000fd5b505050506040513d60408110156107a357600080fd5b5080516020909101519092509050811580156107cc5750600254600160a060020a038681169116145b1561087f5760008054604080517f809a9e55000000000000000000000000000000000000000000000000000000008152600160a060020a038981166004830152888116602483015260016044830152825193169363809a9e5593606480840194939192918390030190829087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050506040513d604081101561087057600080fd5b50805160209091015190925090505b935093915050565b600054600160a060020a031681565b600254600160a060020a031681565b600154600160a060020a031681565b600080600086600160a060020a03166370a08231876040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b505050506040513d602081101561093e57600080fd5b505191508382101561099a576040805160e560020a62461bcd02815260206004820152601260248201527f496e73756666696369656e742066756e64730000000000000000000000000000604482015290519081900360640190fd5b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a038881166004830152306024830152915186928a169163dd62ed3e9160448083019260209291908290030181600087803b158015610a0557600080fd5b505af1158015610a19573d6000803e3d6000fd5b505050506040513d6020811015610a2f57600080fd5b50511015610a87576040805160e560020a62461bcd02815260206004820152601660248201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015290519081900360640190fd5b60408051600160a060020a0388811660248301528781166044830152606480830188905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017815292518251918b1693909182919080838360005b83811015610b2f578181015183820152602001610b17565b50505050905090810190601f168015610b5c5780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af192505050801515610b825760009250610c66565b86600160a060020a03166370a08231876040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610bdd57600080fd5b505af1158015610bf1573d6000803e3d6000fd5b505050506040513d6020811015610c0757600080fd5b505184830314610c61576040805160e560020a62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b600192505b5050949350505050565b60408051600160a060020a038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000178152925182516000948594938916939291829190808383895b83811015610d14578181015183820152602001610cfc565b50505050905090810190601f168015610d415780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af192505050801515610d675760009150610e58565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a0386811660248301529151859288169163dd62ed3e9160448083019260209291908290030181600087803b158015610dd257600080fd5b505af1158015610de6573d6000803e3d6000fd5b505050506040513d6020811015610dfc57600080fd5b505114610e53576040805160e560020a62461bcd02815260206004820152600e60248201527f417070726f7665206661696c6564000000000000000000000000000000000000604482015290519081900360640190fd5b600191505b509392505050565b600080610e6f84846000610c70565b9050801515610e8b57610e8484846001610c70565b9150610e90565b600191505b5092915050565b60008083831115610ea757600080fd5b5050900390565b600080600085600160a060020a03166370a08231306040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610f0e57600080fd5b505af1158015610f22573d6000803e3d6000fd5b505050506040513d6020811015610f3857600080fd5b5051915083821015610f94576040805160e560020a62461bcd02815260206004820152601260248201527f496e73756666696369656e742066756e64730000000000000000000000000000604482015290519081900360640190fd5b60408051600160a060020a038781166024830152604480830188905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017815292518251918a1693909182919080838360005b8381101561103457818101518382015260200161101c565b50505050905090810190601f1680156110615780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1925050508015156110875760009250611171565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038816916370a082319160248083019260209291908290030181600087803b1580156110e857600080fd5b505af11580156110fc573d6000803e3d6000fd5b505050506040513d602081101561111257600080fd5b50518483031461116c576040805160e560020a62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b600192505b505093925050505600a165627a7a7230582031a7b9e1d8827e4c9db3a211443a282c42256a58c080916cbcdcb591fae0fde40029";

    public static final String FUNC_CONVERT = "convert";

    public static final String FUNC_GETEXPECTEDRATE = "getExpectedRate";

    public static final String FUNC_KYBER = "kyber";

    public static final String FUNC_MANATOKEN = "ManaToken";

    public static final String FUNC_WALLETID = "walletId";

    @Deprecated
    protected KyberConverter(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected KyberConverter(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected KyberConverter(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected KyberConverter(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> convert(Address _srcToken, Address _destToken, Uint256 _srcAmount, Uint256 _destAmount) {
        final Function function = new Function(
                FUNC_CONVERT, 
                Arrays.<Type>asList(_srcToken, _destToken, _srcAmount, _destAmount), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple2<Uint256, Uint256>> getExpectedRate(Address _srcToken, Address _destToken, Uint256 _srcAmount) {
        final Function function = new Function(FUNC_GETEXPECTEDRATE, 
                Arrays.<Type>asList(_srcToken, _destToken, _srcAmount), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<Uint256, Uint256>>(function,
                new Callable<Tuple2<Uint256, Uint256>>() {
                    @Override
                    public Tuple2<Uint256, Uint256> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<Uint256, Uint256>(
                                (Uint256) results.get(0), 
                                (Uint256) results.get(1));
                    }
                });
    }

    public RemoteFunctionCall<Address> kyber() {
        final Function function = new Function(FUNC_KYBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteFunctionCall<Address> ManaToken() {
        final Function function = new Function(FUNC_MANATOKEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteFunctionCall<Address> walletId() {
        final Function function = new Function(FUNC_WALLETID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    @Deprecated
    public static KyberConverter load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new KyberConverter(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static KyberConverter load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new KyberConverter(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static KyberConverter load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new KyberConverter(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static KyberConverter load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new KyberConverter(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<KyberConverter> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, Address _kyber, Address _walletId) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_kyber, _walletId));
        return deployRemoteCall(KyberConverter.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<KyberConverter> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, Address _kyber, Address _walletId) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_kyber, _walletId));
        return deployRemoteCall(KyberConverter.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<KyberConverter> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, Address _kyber, Address _walletId) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_kyber, _walletId));
        return deployRemoteCall(KyberConverter.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<KyberConverter> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, Address _kyber, Address _walletId) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_kyber, _walletId));
        return deployRemoteCall(KyberConverter.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
