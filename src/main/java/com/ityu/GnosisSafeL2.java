package com.ityu;

import com.ityu.util.EthUtilsKt;
import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.5.
 */
@SuppressWarnings("rawtypes")
public class GnosisSafeL2 extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_VERSION = "VERSION";

    public static final String FUNC_ADDOWNERWITHTHRESHOLD = "addOwnerWithThreshold";

    public static final String FUNC_APPROVEHASH = "approveHash";

    public static final String FUNC_APPROVEDHASHES = "approvedHashes";

    public static final String FUNC_CHANGETHRESHOLD = "changeThreshold";

    public static final String FUNC_CHECKNSIGNATURES = "checkNSignatures";

    public static final String FUNC_CHECKSIGNATURES = "checkSignatures";

    public static final String FUNC_DISABLEMODULE = "disableModule";

    public static final String FUNC_DOMAINSEPARATOR = "domainSeparator";

    public static final String FUNC_ENABLEMODULE = "enableModule";

    public static final String FUNC_ENCODETRANSACTIONDATA = "encodeTransactionData";

    public static final String FUNC_EXECTRANSACTION = "execTransaction";

    public static final String FUNC_EXECTRANSACTIONFROMMODULE = "execTransactionFromModule";

    public static final String FUNC_EXECTRANSACTIONFROMMODULERETURNDATA = "execTransactionFromModuleReturnData";

    public static final String FUNC_GETCHAINID = "getChainId";

    public static final String FUNC_GETMODULESPAGINATED = "getModulesPaginated";

    public static final String FUNC_GETOWNERS = "getOwners";

    public static final String FUNC_GETSTORAGEAT = "getStorageAt";

    public static final String FUNC_GETTHRESHOLD = "getThreshold";

    public static final String FUNC_GETTRANSACTIONHASH = "getTransactionHash";

    public static final String FUNC_ISMODULEENABLED = "isModuleEnabled";

    public static final String FUNC_ISOWNER = "isOwner";

    public static final String FUNC_NONCE = "nonce";

    public static final String FUNC_REMOVEOWNER = "removeOwner";

    public static final String FUNC_REQUIREDTXGAS = "requiredTxGas";

    public static final String FUNC_SETFALLBACKHANDLER = "setFallbackHandler";

    public static final String FUNC_SETGUARD = "setGuard";

    public static final String FUNC_SETUP = "setup";

    public static final String FUNC_SIGNEDMESSAGES = "signedMessages";

    public static final String FUNC_SIMULATEANDREVERT = "simulateAndRevert";

    public static final String FUNC_SWAPOWNER = "swapOwner";

    public static final Event ADDEDOWNER_EVENT = new Event("AddedOwner", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event APPROVEHASH_EVENT = new Event("ApproveHash", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event CHANGEDFALLBACKHANDLER_EVENT = new Event("ChangedFallbackHandler", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event CHANGEDGUARD_EVENT = new Event("ChangedGuard", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event CHANGEDTHRESHOLD_EVENT = new Event("ChangedThreshold", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event DISABLEDMODULE_EVENT = new Event("DisabledModule", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event ENABLEDMODULE_EVENT = new Event("EnabledModule", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event EXECUTIONFAILURE_EVENT = new Event("ExecutionFailure", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event EXECUTIONFROMMODULEFAILURE_EVENT = new Event("ExecutionFromModuleFailure", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event EXECUTIONFROMMODULESUCCESS_EVENT = new Event("ExecutionFromModuleSuccess", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event EXECUTIONSUCCESS_EVENT = new Event("ExecutionSuccess", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event REMOVEDOWNER_EVENT = new Event("RemovedOwner", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event SAFEMODULETRANSACTION_EVENT = new Event("SafeModuleTransaction", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint8>() {}));
    ;

    public static final Event SAFEMULTISIGTRANSACTION_EVENT = new Event("SafeMultiSigTransaction", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<Uint8>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
    ;

    public static final Event SAFERECEIVED_EVENT = new Event("SafeReceived", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SAFESETUP_EVENT = new Event("SafeSetup", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event SIGNMSG_EVENT = new Event("SignMsg", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}));
    ;

    @Deprecated
    protected GnosisSafeL2(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GnosisSafeL2(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GnosisSafeL2(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GnosisSafeL2(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<AddedOwnerEventResponse> getAddedOwnerEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ADDEDOWNER_EVENT, transactionReceipt);
        ArrayList<AddedOwnerEventResponse> responses = new ArrayList<AddedOwnerEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            AddedOwnerEventResponse typedResponse = new AddedOwnerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddedOwnerEventResponse> addedOwnerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, AddedOwnerEventResponse>() {
            @Override
            public AddedOwnerEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ADDEDOWNER_EVENT, log);
                AddedOwnerEventResponse typedResponse = new AddedOwnerEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddedOwnerEventResponse> addedOwnerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDEDOWNER_EVENT));
        return addedOwnerEventFlowable(filter);
    }

    public List<ApproveHashEventResponse> getApproveHashEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVEHASH_EVENT, transactionReceipt);
        ArrayList<ApproveHashEventResponse> responses = new ArrayList<ApproveHashEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ApproveHashEventResponse typedResponse = new ApproveHashEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.approvedHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApproveHashEventResponse> approveHashEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApproveHashEventResponse>() {
            @Override
            public ApproveHashEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVEHASH_EVENT, log);
                ApproveHashEventResponse typedResponse = new ApproveHashEventResponse();
                typedResponse.log = log;
                typedResponse.approvedHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.owner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApproveHashEventResponse> approveHashEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVEHASH_EVENT));
        return approveHashEventFlowable(filter);
    }

    public List<ChangedFallbackHandlerEventResponse> getChangedFallbackHandlerEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(CHANGEDFALLBACKHANDLER_EVENT, transactionReceipt);
        ArrayList<ChangedFallbackHandlerEventResponse> responses = new ArrayList<ChangedFallbackHandlerEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ChangedFallbackHandlerEventResponse typedResponse = new ChangedFallbackHandlerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.handler = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ChangedFallbackHandlerEventResponse> changedFallbackHandlerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ChangedFallbackHandlerEventResponse>() {
            @Override
            public ChangedFallbackHandlerEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(CHANGEDFALLBACKHANDLER_EVENT, log);
                ChangedFallbackHandlerEventResponse typedResponse = new ChangedFallbackHandlerEventResponse();
                typedResponse.log = log;
                typedResponse.handler = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ChangedFallbackHandlerEventResponse> changedFallbackHandlerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CHANGEDFALLBACKHANDLER_EVENT));
        return changedFallbackHandlerEventFlowable(filter);
    }

    public List<ChangedGuardEventResponse> getChangedGuardEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(CHANGEDGUARD_EVENT, transactionReceipt);
        ArrayList<ChangedGuardEventResponse> responses = new ArrayList<ChangedGuardEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ChangedGuardEventResponse typedResponse = new ChangedGuardEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.guard = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ChangedGuardEventResponse> changedGuardEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ChangedGuardEventResponse>() {
            @Override
            public ChangedGuardEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(CHANGEDGUARD_EVENT, log);
                ChangedGuardEventResponse typedResponse = new ChangedGuardEventResponse();
                typedResponse.log = log;
                typedResponse.guard = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ChangedGuardEventResponse> changedGuardEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CHANGEDGUARD_EVENT));
        return changedGuardEventFlowable(filter);
    }

    public List<ChangedThresholdEventResponse> getChangedThresholdEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(CHANGEDTHRESHOLD_EVENT, transactionReceipt);
        ArrayList<ChangedThresholdEventResponse> responses = new ArrayList<ChangedThresholdEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ChangedThresholdEventResponse typedResponse = new ChangedThresholdEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.threshold = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ChangedThresholdEventResponse> changedThresholdEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ChangedThresholdEventResponse>() {
            @Override
            public ChangedThresholdEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(CHANGEDTHRESHOLD_EVENT, log);
                ChangedThresholdEventResponse typedResponse = new ChangedThresholdEventResponse();
                typedResponse.log = log;
                typedResponse.threshold = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ChangedThresholdEventResponse> changedThresholdEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(CHANGEDTHRESHOLD_EVENT));
        return changedThresholdEventFlowable(filter);
    }

    public List<DisabledModuleEventResponse> getDisabledModuleEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(DISABLEDMODULE_EVENT, transactionReceipt);
        ArrayList<DisabledModuleEventResponse> responses = new ArrayList<DisabledModuleEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            DisabledModuleEventResponse typedResponse = new DisabledModuleEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<DisabledModuleEventResponse> disabledModuleEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, DisabledModuleEventResponse>() {
            @Override
            public DisabledModuleEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(DISABLEDMODULE_EVENT, log);
                DisabledModuleEventResponse typedResponse = new DisabledModuleEventResponse();
                typedResponse.log = log;
                typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<DisabledModuleEventResponse> disabledModuleEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DISABLEDMODULE_EVENT));
        return disabledModuleEventFlowable(filter);
    }

    public List<EnabledModuleEventResponse> getEnabledModuleEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ENABLEDMODULE_EVENT, transactionReceipt);
        ArrayList<EnabledModuleEventResponse> responses = new ArrayList<EnabledModuleEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            EnabledModuleEventResponse typedResponse = new EnabledModuleEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EnabledModuleEventResponse> enabledModuleEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, EnabledModuleEventResponse>() {
            @Override
            public EnabledModuleEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ENABLEDMODULE_EVENT, log);
                EnabledModuleEventResponse typedResponse = new EnabledModuleEventResponse();
                typedResponse.log = log;
                typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EnabledModuleEventResponse> enabledModuleEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ENABLEDMODULE_EVENT));
        return enabledModuleEventFlowable(filter);
    }

    public List<ExecutionFailureEventResponse> getExecutionFailureEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(EXECUTIONFAILURE_EVENT, transactionReceipt);
        ArrayList<ExecutionFailureEventResponse> responses = new ArrayList<ExecutionFailureEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ExecutionFailureEventResponse typedResponse = new ExecutionFailureEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.txHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.payment = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ExecutionFailureEventResponse> executionFailureEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ExecutionFailureEventResponse>() {
            @Override
            public ExecutionFailureEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(EXECUTIONFAILURE_EVENT, log);
                ExecutionFailureEventResponse typedResponse = new ExecutionFailureEventResponse();
                typedResponse.log = log;
                typedResponse.txHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.payment = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ExecutionFailureEventResponse> executionFailureEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EXECUTIONFAILURE_EVENT));
        return executionFailureEventFlowable(filter);
    }

    public List<ExecutionFromModuleFailureEventResponse> getExecutionFromModuleFailureEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(EXECUTIONFROMMODULEFAILURE_EVENT, transactionReceipt);
        ArrayList<ExecutionFromModuleFailureEventResponse> responses = new ArrayList<ExecutionFromModuleFailureEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ExecutionFromModuleFailureEventResponse typedResponse = new ExecutionFromModuleFailureEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.module = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ExecutionFromModuleFailureEventResponse> executionFromModuleFailureEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ExecutionFromModuleFailureEventResponse>() {
            @Override
            public ExecutionFromModuleFailureEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(EXECUTIONFROMMODULEFAILURE_EVENT, log);
                ExecutionFromModuleFailureEventResponse typedResponse = new ExecutionFromModuleFailureEventResponse();
                typedResponse.log = log;
                typedResponse.module = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ExecutionFromModuleFailureEventResponse> executionFromModuleFailureEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EXECUTIONFROMMODULEFAILURE_EVENT));
        return executionFromModuleFailureEventFlowable(filter);
    }

    public List<ExecutionFromModuleSuccessEventResponse> getExecutionFromModuleSuccessEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(EXECUTIONFROMMODULESUCCESS_EVENT, transactionReceipt);
        ArrayList<ExecutionFromModuleSuccessEventResponse> responses = new ArrayList<ExecutionFromModuleSuccessEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ExecutionFromModuleSuccessEventResponse typedResponse = new ExecutionFromModuleSuccessEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.module = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ExecutionFromModuleSuccessEventResponse> executionFromModuleSuccessEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ExecutionFromModuleSuccessEventResponse>() {
            @Override
            public ExecutionFromModuleSuccessEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(EXECUTIONFROMMODULESUCCESS_EVENT, log);
                ExecutionFromModuleSuccessEventResponse typedResponse = new ExecutionFromModuleSuccessEventResponse();
                typedResponse.log = log;
                typedResponse.module = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ExecutionFromModuleSuccessEventResponse> executionFromModuleSuccessEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EXECUTIONFROMMODULESUCCESS_EVENT));
        return executionFromModuleSuccessEventFlowable(filter);
    }

    public List<ExecutionSuccessEventResponse> getExecutionSuccessEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(EXECUTIONSUCCESS_EVENT, transactionReceipt);
        ArrayList<ExecutionSuccessEventResponse> responses = new ArrayList<ExecutionSuccessEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ExecutionSuccessEventResponse typedResponse = new ExecutionSuccessEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.txHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.payment = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ExecutionSuccessEventResponse> executionSuccessEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ExecutionSuccessEventResponse>() {
            @Override
            public ExecutionSuccessEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(EXECUTIONSUCCESS_EVENT, log);
                ExecutionSuccessEventResponse typedResponse = new ExecutionSuccessEventResponse();
                typedResponse.log = log;
                typedResponse.txHash = (byte[]) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.payment = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ExecutionSuccessEventResponse> executionSuccessEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EXECUTIONSUCCESS_EVENT));
        return executionSuccessEventFlowable(filter);
    }

    public List<RemovedOwnerEventResponse> getRemovedOwnerEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVEDOWNER_EVENT, transactionReceipt);
        ArrayList<RemovedOwnerEventResponse> responses = new ArrayList<RemovedOwnerEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RemovedOwnerEventResponse typedResponse = new RemovedOwnerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RemovedOwnerEventResponse> removedOwnerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RemovedOwnerEventResponse>() {
            @Override
            public RemovedOwnerEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(REMOVEDOWNER_EVENT, log);
                RemovedOwnerEventResponse typedResponse = new RemovedOwnerEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RemovedOwnerEventResponse> removedOwnerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REMOVEDOWNER_EVENT));
        return removedOwnerEventFlowable(filter);
    }

    public List<SafeModuleTransactionEventResponse> getSafeModuleTransactionEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SAFEMODULETRANSACTION_EVENT, transactionReceipt);
        ArrayList<SafeModuleTransactionEventResponse> responses = new ArrayList<SafeModuleTransactionEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SafeModuleTransactionEventResponse typedResponse = new SafeModuleTransactionEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.data = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.operation = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SafeModuleTransactionEventResponse> safeModuleTransactionEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SafeModuleTransactionEventResponse>() {
            @Override
            public SafeModuleTransactionEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SAFEMODULETRANSACTION_EVENT, log);
                SafeModuleTransactionEventResponse typedResponse = new SafeModuleTransactionEventResponse();
                typedResponse.log = log;
                typedResponse.module = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.data = (byte[]) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.operation = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SafeModuleTransactionEventResponse> safeModuleTransactionEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SAFEMODULETRANSACTION_EVENT));
        return safeModuleTransactionEventFlowable(filter);
    }

    public List<SafeMultiSigTransactionEventResponse> getSafeMultiSigTransactionEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SAFEMULTISIGTRANSACTION_EVENT, transactionReceipt);
        ArrayList<SafeMultiSigTransactionEventResponse> responses = new ArrayList<SafeMultiSigTransactionEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SafeMultiSigTransactionEventResponse typedResponse = new SafeMultiSigTransactionEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.to = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.data = (byte[]) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.operation = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.safeTxGas = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.baseGas = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.gasPrice = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
            typedResponse.gasToken = (String) eventValues.getNonIndexedValues().get(7).getValue();
            typedResponse.refundReceiver = (String) eventValues.getNonIndexedValues().get(8).getValue();
            typedResponse.signatures = (byte[]) eventValues.getNonIndexedValues().get(9).getValue();
            typedResponse.additionalInfo = (byte[]) eventValues.getNonIndexedValues().get(10).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SafeMultiSigTransactionEventResponse> safeMultiSigTransactionEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SafeMultiSigTransactionEventResponse>() {
            @Override
            public SafeMultiSigTransactionEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SAFEMULTISIGTRANSACTION_EVENT, log);
                SafeMultiSigTransactionEventResponse typedResponse = new SafeMultiSigTransactionEventResponse();
                typedResponse.log = log;
                typedResponse.to = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.data = (byte[]) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.operation = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.safeTxGas = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.baseGas = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse.gasPrice = (BigInteger) eventValues.getNonIndexedValues().get(6).getValue();
                typedResponse.gasToken = (String) eventValues.getNonIndexedValues().get(7).getValue();
                typedResponse.refundReceiver = (String) eventValues.getNonIndexedValues().get(8).getValue();
                typedResponse.signatures = (byte[]) eventValues.getNonIndexedValues().get(9).getValue();
                typedResponse.additionalInfo = (byte[]) eventValues.getNonIndexedValues().get(10).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SafeMultiSigTransactionEventResponse> safeMultiSigTransactionEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SAFEMULTISIGTRANSACTION_EVENT));
        return safeMultiSigTransactionEventFlowable(filter);
    }

    public List<SafeReceivedEventResponse> getSafeReceivedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SAFERECEIVED_EVENT, transactionReceipt);
        ArrayList<SafeReceivedEventResponse> responses = new ArrayList<SafeReceivedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SafeReceivedEventResponse typedResponse = new SafeReceivedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SafeReceivedEventResponse> safeReceivedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SafeReceivedEventResponse>() {
            @Override
            public SafeReceivedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SAFERECEIVED_EVENT, log);
                SafeReceivedEventResponse typedResponse = new SafeReceivedEventResponse();
                typedResponse.log = log;
                typedResponse.sender = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SafeReceivedEventResponse> safeReceivedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SAFERECEIVED_EVENT));
        return safeReceivedEventFlowable(filter);
    }

    public List<SafeSetupEventResponse> getSafeSetupEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SAFESETUP_EVENT, transactionReceipt);
        ArrayList<SafeSetupEventResponse> responses = new ArrayList<SafeSetupEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SafeSetupEventResponse typedResponse = new SafeSetupEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.initiator = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.owners = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.threshold = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.initializer = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.fallbackHandler = (String) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SafeSetupEventResponse> safeSetupEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SafeSetupEventResponse>() {
            @Override
            public SafeSetupEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SAFESETUP_EVENT, log);
                SafeSetupEventResponse typedResponse = new SafeSetupEventResponse();
                typedResponse.log = log;
                typedResponse.initiator = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.owners = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.threshold = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.initializer = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.fallbackHandler = (String) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SafeSetupEventResponse> safeSetupEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SAFESETUP_EVENT));
        return safeSetupEventFlowable(filter);
    }

    public List<SignMsgEventResponse> getSignMsgEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SIGNMSG_EVENT, transactionReceipt);
        ArrayList<SignMsgEventResponse> responses = new ArrayList<SignMsgEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SignMsgEventResponse typedResponse = new SignMsgEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.msgHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SignMsgEventResponse> signMsgEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, SignMsgEventResponse>() {
            @Override
            public SignMsgEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SIGNMSG_EVENT, log);
                SignMsgEventResponse typedResponse = new SignMsgEventResponse();
                typedResponse.log = log;
                typedResponse.msgHash = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SignMsgEventResponse> signMsgEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SIGNMSG_EVENT));
        return signMsgEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> VERSION() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VERSION, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addOwnerWithThreshold(String owner, BigInteger _threshold) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDOWNERWITHTHRESHOLD, 
                Arrays.<Type>asList(new Address(160, owner),
                new Uint256(_threshold)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> approveHash(byte[] hashToApprove) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVEHASH, 
                Arrays.<Type>asList(new Bytes32(hashToApprove)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> approvedHashes(String param0, byte[] param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVEDHASHES, 
                Arrays.<Type>asList(new Address(160, param0),
                new Bytes32(param1)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> changeThreshold(BigInteger _threshold) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CHANGETHRESHOLD, 
                Arrays.<Type>asList(new Uint256(_threshold)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> checkNSignatures(byte[] dataHash, byte[] data, byte[] signatures, BigInteger requiredSignatures) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CHECKNSIGNATURES, 
                Arrays.<Type>asList(new Bytes32(dataHash),
                new DynamicBytes(data),
                new DynamicBytes(signatures),
                new Uint256(requiredSignatures)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> checkSignatures(byte[] dataHash, byte[] data, byte[] signatures) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CHECKSIGNATURES, 
                Arrays.<Type>asList(new Bytes32(dataHash),
                new DynamicBytes(data),
                new DynamicBytes(signatures)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> disableModule(String prevModule, String module) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DISABLEMODULE, 
                Arrays.<Type>asList(new Address(160, prevModule),
                new Address(160, module)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> domainSeparator() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DOMAINSEPARATOR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> enableModule(String module) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ENABLEMODULE, 
                Arrays.<Type>asList(new Address(160, module)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> encodeTransactionData(String to, BigInteger value, byte[] data, BigInteger operation, BigInteger safeTxGas, BigInteger baseGas, BigInteger gasPrice, String gasToken, String refundReceiver, BigInteger _nonce) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ENCODETRANSACTIONDATA, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation),
                new Uint256(safeTxGas),
                new Uint256(baseGas),
                new Uint256(gasPrice),
                new Address(160, gasToken),
                new Address(160, refundReceiver),
                new Uint256(_nonce)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> execTransaction(String to, BigInteger value, byte[] data, BigInteger operation, BigInteger safeTxGas, BigInteger baseGas, BigInteger gasPrice, String gasToken, String refundReceiver, byte[] signatures) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXECTRANSACTION, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation),
                new Uint256(safeTxGas),
                new Uint256(baseGas),
                new Uint256(gasPrice),
                new Address(160, gasToken),
                new Address(160, refundReceiver),
                new DynamicBytes(signatures)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> execTransactionFromModule(String to, BigInteger value, byte[] data, BigInteger operation) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXECTRANSACTIONFROMMODULE, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> execTransactionFromModuleReturnData(String to, BigInteger value, byte[] data, BigInteger operation) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_EXECTRANSACTIONFROMMODULERETURNDATA, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getChainId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETCHAINID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getModulesPaginated(String start, BigInteger pageSize) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETMODULESPAGINATED, 
                Arrays.<Type>asList(new Address(160, start),
                new Uint256(pageSize)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getOwners() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETOWNERS, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getStorageAt(BigInteger offset, BigInteger length) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETSTORAGEAT, 
                Arrays.<Type>asList(new Uint256(offset),
                new Uint256(length)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getThreshold() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETTHRESHOLD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getTransactionHash(String to, BigInteger value, byte[] data, BigInteger operation, BigInteger safeTxGas, BigInteger baseGas, BigInteger gasPrice, String gasToken, String refundReceiver, BigInteger _nonce) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETTRANSACTIONHASH, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation),
                new Uint256(safeTxGas),
                new Uint256(baseGas),
                new Uint256(gasPrice),
                new Address(160, gasToken),
                new Address(160, refundReceiver),
                new Uint256(_nonce)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> isModuleEnabled(String module) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ISMODULEENABLED, 
                Arrays.<Type>asList(new Address(160, module)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> isOwner(String owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ISOWNER, 
                Arrays.<Type>asList(new Address(160, owner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> nonce() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_NONCE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeOwner(String prevOwner, String owner, BigInteger _threshold) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEOWNER, 
                Arrays.<Type>asList(new Address(160, prevOwner),
                new Address(160, owner),
                new Uint256(_threshold)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> requiredTxGas(String to, BigInteger value, byte[] data, BigInteger operation) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REQUIREDTXGAS, 
                Arrays.<Type>asList(new Address(160, to),
                new Uint256(value),
                new DynamicBytes(data),
                new Uint8(operation)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFallbackHandler(String handler) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFALLBACKHANDLER, 
                Arrays.<Type>asList(new Address(160, handler)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setGuard(String guard) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETGUARD, 
                Arrays.<Type>asList(new Address(160, guard)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setup(List<String> _owners, BigInteger _threshold, String to, byte[] data, String fallbackHandler, String paymentToken, BigInteger payment, String paymentReceiver) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETUP, 
                Arrays.<Type>asList(new DynamicArray<Address>(
                        Address.class,
                        org.web3j.abi.Utils.typeMap(_owners, Address.class)),
                new Uint256(_threshold),
                new Address(160, to),
                new DynamicBytes(data),
                new Address(160, fallbackHandler),
                new Address(160, paymentToken),
                new Uint256(payment),
                new Address(160, paymentReceiver)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static String getMessage(List<String> _owners, BigInteger _threshold, String to, byte[] data, String fallbackHandler, String paymentToken, BigInteger payment, String paymentReceiver){
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETUP,
                Arrays.<Type>asList(new DynamicArray<Address>(
                                Address.class,
                                org.web3j.abi.Utils.typeMap(_owners, Address.class)),
                        new Uint256(_threshold),
                        new Address(160, to),
                        new DynamicBytes(data),
                        new Address(160, fallbackHandler),
                        new Address(160, paymentToken),
                        new Uint256(payment),
                        new Address(160, paymentReceiver)),
                Collections.<TypeReference<?>>emptyList());

       return EthUtilsKt.encode(function);
    }


    public RemoteFunctionCall<TransactionReceipt> signedMessages(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SIGNEDMESSAGES, 
                Arrays.<Type>asList(new Bytes32(param0)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> simulateAndRevert(String targetContract, byte[] calldataPayload) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SIMULATEANDREVERT, 
                Arrays.<Type>asList(new Address(160, targetContract),
                new DynamicBytes(calldataPayload)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> swapOwner(String prevOwner, String oldOwner, String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SWAPOWNER, 
                Arrays.<Type>asList(new Address(160, prevOwner),
                new Address(160, oldOwner),
                new Address(160, newOwner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static GnosisSafeL2 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GnosisSafeL2(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GnosisSafeL2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GnosisSafeL2(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GnosisSafeL2 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GnosisSafeL2(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GnosisSafeL2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GnosisSafeL2(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GnosisSafeL2> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GnosisSafeL2.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GnosisSafeL2> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GnosisSafeL2.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<GnosisSafeL2> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GnosisSafeL2.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GnosisSafeL2> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GnosisSafeL2.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class AddedOwnerEventResponse extends BaseEventResponse {
        public String owner;
    }

    public static class ApproveHashEventResponse extends BaseEventResponse {
        public byte[] approvedHash;

        public String owner;
    }

    public static class ChangedFallbackHandlerEventResponse extends BaseEventResponse {
        public String handler;
    }

    public static class ChangedGuardEventResponse extends BaseEventResponse {
        public String guard;
    }

    public static class ChangedThresholdEventResponse extends BaseEventResponse {
        public BigInteger threshold;
    }

    public static class DisabledModuleEventResponse extends BaseEventResponse {
        public String module;
    }

    public static class EnabledModuleEventResponse extends BaseEventResponse {
        public String module;
    }

    public static class ExecutionFailureEventResponse extends BaseEventResponse {
        public byte[] txHash;

        public BigInteger payment;
    }

    public static class ExecutionFromModuleFailureEventResponse extends BaseEventResponse {
        public String module;
    }

    public static class ExecutionFromModuleSuccessEventResponse extends BaseEventResponse {
        public String module;
    }

    public static class ExecutionSuccessEventResponse extends BaseEventResponse {
        public byte[] txHash;

        public BigInteger payment;
    }

    public static class RemovedOwnerEventResponse extends BaseEventResponse {
        public String owner;
    }

    public static class SafeModuleTransactionEventResponse extends BaseEventResponse {
        public String module;

        public String to;

        public BigInteger value;

        public byte[] data;

        public BigInteger operation;
    }

    public static class SafeMultiSigTransactionEventResponse extends BaseEventResponse {
        public String to;

        public BigInteger value;

        public byte[] data;

        public BigInteger operation;

        public BigInteger safeTxGas;

        public BigInteger baseGas;

        public BigInteger gasPrice;

        public String gasToken;

        public String refundReceiver;

        public byte[] signatures;

        public byte[] additionalInfo;
    }

    public static class SafeReceivedEventResponse extends BaseEventResponse {
        public String sender;

        public BigInteger value;
    }

    public static class SafeSetupEventResponse extends BaseEventResponse {
        public String initiator;

        public List<String> owners;

        public BigInteger threshold;

        public String initializer;

        public String fallbackHandler;
    }

    public static class SignMsgEventResponse extends BaseEventResponse {
        public byte[] msgHash;
    }
}
